/*

LongDivide.min.js
Created by Glenwing (https://github.com/Glenwing)

Version: 1.3.0
October 17, 2019

*/

function LongDivide(e,n,i){try{Decimal.set({precision:1e3})}catch(e){return console.log("Error in function LongDivide(): Decimal.js library not detected. LongDivide.js requires Decimal.js in order to operate. (https://github.com/MikeMcl/decimal.js)"),"Error"}if(""==e||""==n)return"";if("string"==typeof e||"number"==typeof e)try{if((e=new Decimal(e)).isNaN()||!e.isFinite())return console.log("Error in function LongDivide(): First argument is NaN or Infinity.\nArgument:",e),"Error"}catch(n){return console.log("Error in function LongDivide(): First argument could not be interpreted as a number.\nArgument:",e),"Error"}else"object"==typeof e?e.constructor!==Decimal&&console.log("Error in function LongDivide(): First argument is an unrecognized object. Argument must be a string, number, or Decimal object.\nArgument:",e):console.log("Error in function LongDivide(): First argument is of an unrecognized type.\ntypeof(A):",typeof e);if("string"==typeof n||"number"==typeof n)try{!(n=new Decimal(n)).isNaN()&&n.isFinite()||console.log("Error in function LongDivide(): Second argument is NaN or Infinity.\nArgument:",n)}catch(e){return console.log("Error in function LongDivide(): Second argument could not be interpreted as a number.\nArgument:",n),"Error"}else"object"==typeof n?n.constructor!==Decimal&&console.log("Error in function LongDivide(): Second argument is an unrecognized object. Argument must be a string, number, or Decimal object.\nArgument:",n):console.log("Error in function LongDivide(): Second argument is of an unrecognized type.\ntypeof(B):",typeof n);if(n.isZero())return console.log("Error in function LongDivide(): Division by zero"),"Error";if(!e.div(n).isFinite())return console.log("Error in function LongDivide(): Division result is Infinity,\nA:",e.toFixed(e.dp()),"\nB:",n.toFixed(n.dp())),"Error";void 0===i&&(i={}),"number"==typeof i?i={p:i}:"string"==typeof i?i=LongDivide.parseFormatString(i):"format"in i&&(i=LongDivide.parseFormatString(i));var o=void 0!==i.OL_open?i.OL_open:LongDivide.OL_open,r=void 0!==i.OL_close?i.OL_close:LongDivide.OL_close,t=void 0!==i.p?i.p:void 0!==i.p_max?i.p_max:void 0!==i.pmax?i.pmax:LongDivide.p_max,a=void 0!==i.p?i.p:void 0!==i.p_min?i.p_min:void 0!==i.pmin?i.pmin:LongDivide.p_min,s=void 0!==i.leading?i.leading:LongDivide.leading,c=void 0!==i.decimal?i.decimal:LongDivide.decimal,d=void 0!==i.thousands?i.thousands:LongDivide.thousands,g=void 0!==i.thousandths?i.thousandths:LongDivide.thousandths,l=void 0!==i.orphan?i.orphan:void 0!==i.orphans?i.orphans:LongDivide.orphans,u=void 0!==i.base?i.base:10,p=void 0!==i.minus?i.minus:LongDivide.minus,v=void 0!==i.plus?i.plus:LongDivide.plus,m=void 0!==i.approx?i.approx:void 0!==i["~"]?i["~"]:LongDivide.approx,h=void 0!==i.currency?i.currency:LongDivide.currency,f=void 0!==i.si?i.si:void 0!==i.SI?i.SI:LongDivide.si,D=void 0!==i["2_singles"]?i["2_singles"]:LongDivide.twosingles,x=void 0!==i.repeat?i.repeat:LongDivide.repeat,L=void 0!==i.exp?i.exp:void 0!==i.e?i.e:LongDivide.exp,b=void 0!==i.exp_open?i.exp_open:LongDivide.exp_open,_=void 0!==i.exp_close?i.exp_close:LongDivide.exp_close,E=void 0!==i.exp_minus?i.exp_minus:LongDivide.exp_minus,y=void 0!==i.exp_plus?i.exp_plus:LongDivide.exp_plus;if(""==o&&""==r&&(x=!1,i.repeat=!1),void 0!==i.thousands&&"."===i.thousands&&void 0===i.decimal&&(c=","),c===d){if(void 0!==i.decimal)return console.log("Error in function LongDivide(): Decimal point character and thousands grouping character cannot be the same.\ndecimal_point_char:"+c+"\nthousands_char:"+d),"Error";"."===c?c=",":","===c&&(c=".")}if(c===g)return console.log("Error in function LongDivide(): Decimal point character and thousandths grouping character cannot be the same.\ndecimal_point_char:"+c+"\nthousandths_char:"+g),"Error";if(c.match(/[0-9]/g))return console.log("Error in function LongDivide(): Decimal point character cannot be a number.\nDecimal_Point_Char:",c),"Error";if(d.match(/[0-9]/g))return console.log("Error in function LongDivide(): Thousands grouping character cannot be a number.\nThousands_Char:",d),"Error";if(g.match(/[0-9]/g))return console.log("Error in function LongDivide(): Thousandths grouping character cannot be a number.\nThousandths_Char:",g),"Error";if(p.match(/[0-9]/g))return console.log("Error in function LongDivide(): Minus sign character cannot be a number.\nMinus_Char:",p),"Error";if(v.match(/[0-9]/g))return console.log("Error in function LongDivide(): Plus sign character cannot be a number.\nPlus_Char:",v),"Error";if(m.match(/[0-9]/g))return console.log("Error in function LongDivide(): Approximation sign character cannot be a number.\nApprox_Char:",m),"Error";if(h.match(/[0-9]/g))return console.log("Error in function LongDivide(): Currency symbol cannot be a number.\nCurrency_Char:",h),"Error";var O=!1;!0===L?L="e":"string"==typeof L&&("e"!=(L=L.toLowerCase())&&"ex"!=L&&"ed"!=L&&"custom"!=L||(O=!0));var F,N=v,w="",M="";if(t=Math.round(t),a=Math.round(a),u=Math.round(u),t<0||a<0||t<a||Number.isNaN(t)||Number.isNaN(a)||!Number.isFinite(t)||!Number.isFinite(a))return console.log("Error in function LongDivide(): Invalid P_Max and P_Min values. Both values must be non-negative numbers, and P_Min cannot be greater than P_Max.\nP_Max:",t,"P_Min",a),"Error";if(isNaN(u))return console.log("Error in function LongDivide(): Invalid Base value. Must be an integer number.\nBase:",u),"Error";if(1==f){for(var k=0,I=0;k<24&&k>-24&&I<10;){if(e.div(n).abs()>=1e3)e=e.div(1e3),k+=3;else{if(!(Math.abs(e.div(n))<1))break;e=e.times(1e3),k-=3}10==(I+=1)&&console.log("Warning in function LongDivide(): Runaway loop in the SI prefix section has hit the watchdog threshold (10 loop cycles) and was aborted. Check your code!\n","A:",e,"B:",n,"Power:",k)}M=0==k?"":"&nbsp;"+{24:"Y",21:"Z",18:"E",15:"P",12:"T",9:"G",6:"M",3:"k",0:"","-3":"m","-6":"&mu;","-9":"n","-12":"p","-15":"f","-18":"a","-21":"z","-24":"y"}[k]}if(0==t&&0==O)return N=(F=e.div(n).round()).isZero()?"":F.isNegative()?p:v,z=(z=F.abs()).toFixed(z.dp()),z=LongDivide.GroupDigits(z,d,g,c,l),z=(z=h.concat(z)).concat(M),z="()"!==N?N.concat(z):"(".concat(z).concat(")"),e.div(n).equals(F)||(z=m.concat(z)),z;if(0!=e.dp()||0!=n.dp()){var S=Decimal.max(e.dp(),n.dp());e=e.times(S),n=n.times(S)}var P=new Decimal(0),j="";1==O?("e"===L?(b="e",_="",y="+",E=p):"ex"===L?(b=" × 10<sup>",_="</sup>",y=v,E=p):"ed"===L&&(b=" ∙ 10<sup>",_="</sup>",y=v,E=p),(F=e.div(n).abs())>0&&(F<1||F>=10)&&(P=new Decimal(F.precision(!0)-F.decimalPlaces()-1)),P.isNegative()?(e=e.times(Decimal.pow(10,P.abs())),P=P.abs(),"10"==e.div(n).abs().toFixed(t).slice(0,2)&&(n=n.times(10),P=P.minus(1)),j=E):(P.isPositive()||P.isZero())&&(n=n.times(Decimal.pow(10,P)),"10"==e.div(n).abs().toFixed(t).slice(0,2)&&(n=n.times(10),P=P.plus(1)),j=y),P=P.toFixed(0)):(P="",b="",_="",j=""),N=e.div(n).isZero()?"":(e.isNegative()?!n.isNegative():n.isNegative())?p:v;var C,A,B,z,Z=e=e.abs(),G=n=n.abs(),T="",R={},q="",W="",Y=!1;C=Z.dividedBy(G).floor(),A=Z.modulo(G),Z=A.times(u),B=C.toFixed(C.dp());for(var H=0;H<t+2;){if(Z.toNumber()in R){if(Y=!0,w="",q=T.substring(0,R[Z]),"0"==(W=T.substring(R[Z],T.length))&&(W="",Y=!1,T=q),T.length>t&&(W="",Y=!1),1==Y&&0==x){for(I=0;T.length<=t;)if(T=T.concat(W),(I+=1)>1e3){console.log("Warning in function LongDivide(): Runaway loop has hit the watchdog threshold in the RepeatEnableFlag section (1 thousand loop cycles) and was aborted. Check your code!\nDecimal_Digits.length:",T.length,"Repetend:",W,"P_Max:",t);break}W="",Y=!1}break}R[Z.toNumber()]=H,C=Z.dividedBy(G).floor(),A=Z.modulo(G),Z=A.times(u),T+=C.toFixed(C.dp()),H+=1}if(T.length>t&&((T=new Decimal("0.".concat(T)).toDecimalPlaces(t)).gte(1)&&(T=T.minus(1),B=new Decimal(B).plus(1).toFixed(0)),T=T.toFixed(t).slice(2),w=m),T.length<a)if(0==Y)T=new Decimal("0.".concat(T)).toFixed(a).slice(2);else if(1==Y)for(a-(q.length+W.length)>=W.length&&(W+=W.repeat(Math.floor((a-(q.length+W.length))/W.length)));q.length+W.length<a;)q=q.concat(W[0]),W=W.slice(1).concat(W[0]);return(z=B.concat(".")).length-1<s&&(z="0".repeat(s-z.length+1).concat(z)),"0."==z&&0==s&&(z="."),1==Y?(1==W.length&&q.length+W.length<t&&1==D&&(W=W.repeat(2)),z=(z=LongDivide.GroupDigits(z.concat(q).concat(W),d,g,c,l)).slice(0,z.indexOf(c)+1+q.length+g.length*Math.floor(q.length/3))+o+z.slice(z.indexOf(c)+1+q.length+g.length*Math.floor(q.length/3))+r):z=LongDivide.GroupDigits(z+T,d,g,c,l),z[z.length-1]==c&&(z=z.replace(c,"")),z=(z=(z=h.concat(z)).concat(b).concat(j).concat(P).concat(_)).concat(M),z="()"==N?"(".concat(z).concat(")"):N.concat(z),z=w.concat(z)}LongDivide.p_max=8,LongDivide.p_min=0,LongDivide.leading=1,LongDivide.decimal=".",LongDivide.thousands="",LongDivide.thousandths="",LongDivide.orphans=!1,LongDivide.minus="−",LongDivide.plus="",LongDivide.approx="≈",LongDivide.currency="",LongDivide.exp="",LongDivide.exp_open="e",LongDivide.exp_close="",LongDivide.exp_minus=LongDivide.minus,LongDivide.exp_plus=LongDivide.plus,LongDivide.OL_open='<span style="text-decoration:overline;">',LongDivide.OL_close="</span>",LongDivide.si=!1,LongDivide.twosingles=!0,LongDivide.repeat=!0,LongDivide.parseFormatString=function(e){if("string"==typeof e){var n=e;e={}}else n=e.format;if(n=n.toLowerCase(),check=n.match(/[^-+!0.,siexd\[\]\(\) ]/g)||[],check.length>1)return console.log("Error in LongDivide.parseFormatString(): Input contains invalid character(s): ",check),e;if(n.indexOf(!1)&&(n=n.concat(".")),e.leading=(n.slice(0,n.indexOf(".")).match(/0/g)||[]).length,-1!=n.indexOf(",")&&(e.thousands=","),-1!=n.indexOf("!")&&(e.approx=""),-1!=n.indexOf("-")&&(e.minus="−"),-1!=n.indexOf("+")&&(e.plus="+"),-1!=n.indexOf("si")&&(e.si=!0),-1!=n.indexOf("ex")?e.exp="ex":-1!=n.indexOf("ed")?e.exp="ed":-1!=n.indexOf("e")&&(e.exp="e"),e.p_max=(n.slice(n.indexOf(".")).match(/0/g)||[]).length,e.p_min=e.p_max,-1!=n.indexOf("[")||-1!=n.indexOf("]")){if(-1==n.indexOf("["))return console.log("Error in LongDivide.parseFormatString(): Invalid syntax: Closing bracket used without an open bracket"),e;if(-1==n.indexOf("]"))return console.log("Error in LongDivide.parseFormatString(): Invalid syntax: Open bracket used without a closing bracket"),e;if(n.indexOf("[")<n.indexOf("."))return console.log("Error in LongDivide.parseFormatString(): Invalid syntax: Bracket appears in front of decimal point."),e;if(n.indexOf("[")>n.indexOf("]"))return console.log("Error in LongDivide.parseFormatString(): Invalid syntax: Open bracket ('[') appears after closing bracket (']')"),e;if((n.match(/\[/g)||[]).length>1)return console.log("Error in LongDivide.parseFormatString(): Invalid syntax: Multiple open brackets detected"),e;if((n.match(/\]/g)||[]).length>1)return console.log("Error in LongDivide.parseFormatString(): Invalid syntax: Multiple closing brackets detected"),e;if(n.lastIndexOf("0")>n.indexOf("]"))return console.log("Error in LongDivide.parseFormatString(): Invalid syntax: Zeros detected after closing bracket"),e;e.p_min=e.p_max-(n.slice(n.indexOf("[")+1,n.indexOf("]")).match(/0/g)||[]).length}return-1!=n.indexOf("(")&&-1!=n.indexOf(")")&&n.indexOf("(")<n.indexOf(")")&&(e.minus="()"),e},LongDivide.GroupDigits=function(e,n,i,o,r){var t=e.toString().split(".");return t[0]=t[0].replace(/\B(?=(\d{3})+(?!\d))/g,n),t.length>1&&(t[1]=t[1].split("").reverse().join("").replace(/\B(?=(\d{3})+(?!\d))/g,i.split("").reverse().join("")).split("").reverse().join("")),""!=t[1]&&void 0!==t[1]&&""!=i&&e.split(".")[1].length%3==1&&-1!=t[1].indexOf(i)&&0==r&&(t[1]=t[1].slice(0,t[1].lastIndexOf(i)).concat(t[1].slice(t[1].lastIndexOf(i)+i.length))),t.join(o)};